swagger: "2.0"
info:
  version: "0.1.0"
  title: Traits API
# during dev, should point to your local machine
host: traits-app-api.herokuapp.com #localhost:3000 #api-traits.herokuapp.com #
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /userTraits:
    # our controller name
    #x-swagger-router-controller: user_traits
    post:
      #operationId: save_user_traits
      tags: [User Traits]
      description: add a new user traits to user
      # movie info to be stored
      parameters:
        - name: username
          description: Username
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserTraits"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /userTraits/{username}:
    # our controller name
    #x-swagger-router-controller: user_traits
    get:
      #operationId: get_user_traits
      tags: [User Traits]
      description: get a user traits
      # define the type of response for Success "200" and Error
      parameters:
        - name: username
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      #operationId: update_user_traits
      tags: [User Traits]
      description: update a user trait
      # define the parameters
      parameters:
        - name: username
          description: Username
          type: string
          in: path
          required: true
        - name: usertrait
          description: User traits properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserTraits"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      #operationId: delete_user_traits
      tags: [User Traits]
      description: delete a movie
      # define the parameters
      parameters:
        - name: username
          description: Username
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /description:
    # our controller name
    #x-swagger-router-controller: description
    post:
      #operationId: save_description
      tags: [Description]
      description: add a new description
      # movie info to be stored
      parameters:
        - name: type
          description: description properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Description"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /descriptions/{type}:
    # our controller name
    #x-swagger-router-controller: description
    get:
      #operationId: get_descriptions_by_type
      tags: [Description]
      description: get descriptions by type
      # define the type of response for Success "200" and Error
      parameters:
        - name: type
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetDescriptionListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /people:
    # our controller name
    #x-swagger-router-controller: people
    get:
      #operationId: get_all_people
      tags: [People]
      description: get people list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPeopleListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      #operationId: save_people
      tags: [People]
      description: add a new person to the list
      # movie info to be stored
      parameters:
        - name: type
          description: People properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/People"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /people/{type}:
    # our controller name
    #x-swagger-router-controller: people
    get:
      #perationId: get_people_by_type
      tags: [People]
      description: get people by type
      # define the type of response for Success "200" and Error
      parameters:
        - name: type
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPeopleListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /personality:
    # our controller name
    #x-swagger-router-controller: personality
    get:
      #operationId: get_all_personalities
      tags: [Personality]
      description: get personality list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPersonalitysListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      #operationId: save_personality
      tags: [Personality]
      description: add a new personality to the list
      # movie info to be stored
      parameters:
        - name: type
          description: Personality properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Personality"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /personality/{type}:
    # our controller name
    #x-swagger-router-controller: personality
    get:
      #operationId: get_personality
      tags: [Personality]
      description: get a personality
      # define the type of response for Success "200" and Error
      parameters:
        - name: type
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPersonalityResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      #operationId: update_personality
      tags: [Personality]
      description: update a personality
      # define the parameters
      parameters:
        - name: type
          description: Personality type
          type: string
          in: path
          required: true
        - name: personality
          description: Personality properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Personality"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      #operationId: delete_personality
      tags: [Personality]
      description: delete a personality
      # define the parameters
      parameters:
        - name: type
          description: Personality type
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /userTypePart:
    # our controller name
    #x-swagger-router-controller: user_type_part
    post:
      #operationId: save_user_type_part
      tags: [User Type Part]
      description: add a new user type part to user
      # movie info to be stored
      parameters:
        - name: username
          description: Username
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserTypePart"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /userTypePart/{username}:
    # our controller name 
    #x-swagger-router-controller: user_type_part
    get:
      #operationId: get_user_type_part
      tags: [User Type Part]
      description: get a user
      # define the type of response for Success "200" and Error
      parameters:
        - name: username
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      #operationId: update_user_type_part
      tags: [User Type Part]
      description: update a user type part
      # define the parameters
      parameters:
        - name: username
          description: username
          type: string
          in: path
          required: true
        - name: usertypepart
          description: User type part properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserTypePart"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      #operationId: delete_user_type_part
      tags: [User Type Part]
      description: delete a movie
      # define the parameters
      parameters:
        - name: username
          description: Username
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /user:
    # our controller name
    #x-swagger-router-controller: user
    post:
      #operationId: save_user
      tags: [User]
      description: add a new user to the list
      # movie info to be stored
      parameters:
        - name: email
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /usersignin:
    # our controller name
    #x-swagger-router-controller: user
    post:
      #operationId: user_signin
      tags: [User]
      description: add a new user to the list
      # movie info to be stored
      parameters:
        - name: email
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserSignin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{username}:
    # our controller name dfsdf
    #x-swagger-router-controller: user
    get:
      #operationId: get_user
      tags: [User]
      description: get a user
      # define the type of response for Success "200" and Error
      parameters:
        - name: username
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      #operationId: update_user
      tags: [User]
      description: update a user
      # define the parameters
      parameters:
        - name: username
          description: Username
          type: string
          in: path
          required: true
        - name: user
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      #operationId: delete_user
      tags: [User]
      description: delete a user
      # define the parameters
      parameters:
        - name: username
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetDescriptionListResponse:
    required:
      - descriptions
    properties:
      # The array of movies
      descriptions:
        type: array
        items: 
          type: object
          properties:
            title:
              type: string
            description:
              type: string
            tags:
              type: string
            source:
              type: string
            timestamp:
              type: string
            personalitytype:
              type: string
  GetPeopleListResponse:
    required:
      - people_list
    properties:
      # The array of movies
      people_list:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            lastname:
              type: string
            occupation:
              type: string
            isreal:
              type: string
            from:
              type: string
            personalitytype:
              type: string
  GetPersonalitysListResponse:
    required:
      - personalities
    properties:
      # The array of users
      personalities:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            totalfrequency:
              type: string
            malefrequency:
              type: string
            femalefrequency:
              type: string
            description:
              type: string
            typefull:
              type: string
            color:
              type: string
  GetUserResponse:
    required:
      - email
    properties:
      id:
        type: string
      name:
        type: string
      lastname:
        type: string
      email: 
        type: string
      username:
        type: string
      passwordHash:
        type: string
      salt:
        type: string
      usertypeparts:
        type: array
        items:
          $ref: "#/definitions/TypePart"
      usertraits:
        type: array
        items:
          $ref: "#/definitions/Trait"
  GetPersonalityResponse:
    required:
      - type
    properties:
      id:
        type: string
      type:
        type: string
      totalfrequency:
        type: string
      malefrequency:
        type: string
      femalefrequency:
        type: string
      description:
        type: string
      typefull:
        type: string
      color:
        type: string
  UserTypePart:
    type: object
    properties:
      username:
        type: string
        description: username
      type_percentage:
        type: array
        items: 
         $ref: "#/definitions/TypePart"
  TypePart:
    type: object
    properties:
      personalitytype:
        type: string
        description: Personality type
      percentage:
        type: string
        description: Personality percentage
      lastupdate:
        type: string
        format: date-time
        description: Last update. E.g. '2016-06-17T15:28:34Z' (RFC 3339, ISO 8601)
  UserTraits:
    type: object
    properties:
      username:
        type: string
        description: Username
      traits:
        type: array
        items: 
         $ref: "#/definitions/Trait"
  Trait:
    type: object
    properties:
      trait:
        type: string
        description: Personality trait
      isme:
        type: string
        description: Is it me?
  User:
    type: object
    properties:
      email:
        type: string
        description: task object name
      password:
        type: string
        description: task object password
      name:
        type: string
        description: user name
      lastname:
        type: string
        description: user lastname
    required:
      - email
      - password
  UpdateUser:
    type: object
    properties:
      name:
        type: string
        description: user name
      lastname:
        type: string
        description: user lastname
  UserSignin:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  Personality:
    type: object
    properties:
      type:
        type: string
        description: task object name
      totalfrequency:
        type: string
        description: task description
      malefrequency:
        type: string
        description: task description
      femalefrequency:
        type: string
        description: task description
      description:
        type: string
        description: task description
      typefull:
        type: string
        description: task description
      color:
        type: string
        description: task description
    required:
      - type
  People:
    type: object
    properties:
      name:
        type: string
      lastname:
        type: string
      occupation:
        type: string
      isreal:
        type: string
      from:
        type: string
      personalitytype:
        type: string
    required:
      - name
  Description:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      tags:
        type: string
      source:
        type: string
      timestamp:
        type: string
      personalitytype:
        type: string
    required:
      - title
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
